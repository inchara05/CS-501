Assignment 1:

FIRST Read the How To Take This Course file on the Modules Page,  then check the Syllabus also on the Modules page , particularly the grading information, and then go on with this assignment.

Start preparing your computer for Java software development by downloading the following: 

Supplement Part I Modules

A Glossary,

B Installing and Configuring JDK (Java Development Kit), and

C Compiling and Running Java from the Command Window

from the Companion Web SiteLinks to an external site..  Since as an instructor I cannot enter the student site, from here on you are a bit on your own.

In the text Section 2.3 Listing 2.3 p37 both the Scanner and System.out.println() methods is used. This should work for executing programs using the Windows Command (CMD) Prompt Window (I have never used a Mac so I cannot tell you how this works on them). The Scanner class for input works in the Windows CMD but can be awkward (it may have to be used multiple times to enter more than one input, like a number and a date). For output to the standard console device (the name of the default output device, usually the screen or, formerly, the printer) use one of the following commands:

out.println(“…text….”);
out.print(“…text…”);
The first prints a line and moves the cursor to the next line; the second prints the texts and stops, allowing further output to the same line.

When you submit Java programs they should be in text files with a .java extension. A simple text editor will work but you may need to change the .txt extension to .java. One of the important Java conventions is that the file name, before the extension, must be exactly the same as the name of the class in the program that contains the main() method. Some IDEs will enforce this but the CMD will not; it is required in this course.  See all the Listings (e.g., 1.1 on p 12, 1.2 and 1.3 on p 14, and 1.4 on p 20) and notice how the file name (before the .java extension) agrees with the class name. In this regard Java Programming Style Guidelines (Links to an external site.)Links to an external site.Links to an external site.is a useful site; there are many others.

For the purposes of this course please name the files using both the Chapter and Exercise number and a short descriptive name. For the first program the name of the file and class should be C1E1Welcome.java and the second could be C1E13SolveLinearEquations.java. Also indicate, maybe with first submission, which edition of the text you are using; as mentioned only the 10th and 11th are supported in this section.

Assignment 1:

Read those parts of Chapter 1, Sections 1.1-5, with which you are not familiar. From Section 1.6 until the end of Chapter 1 is basic programming knowledge that you will need for all assignments.
Do Exercise 1.1 using the Command Prompt Window, no dialog is needed.
Read Chapter 2 paying particular attention to Section 2.3 where the Scanner class is introduced. This class supports user input from the “console”, which usually is the keyboard, but can also be a numeric key pad or any other character/number input device set up on your computer. Until we get to computer graphics the input console will be the keyboard.
Designing the computer-user dialog is an important part of learning how to program. A good start at this is to read the document at User Dialog Rules ADownload User Dialog Rules A.  Do at least one of the exercises in Chapter 2 using scanner for both input and output.
Soon you should start learning how to construct user-computer dialog using more modern pop-up windows.  This are available in Java through the user of JOptionPane classes.  A tutorial about these is available at http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html (Links to an external site.)Links to an external site.Links to an external site.and the specs are at http://docs.oracle.com/javase/8/docs/api/ (Links to an external site.)Links to an external site.Links to an external site.  Although not considered in either the 10th nor the 11th they are useful and efficient.  Try using these after you have written a program using Scanner.
To format output in popup windows attention needs to be paid to the so-called escape charactersin Section 4.3.2 and Table 4.5 of the 10th  and 11th In particular. The \n escape character allows multiple lines in such output windows.
After Exercise 1.1 you should begin to work with an Integrated Development Environment (IDE) instead of the CMD. These are programs that have a text editor, provide line numbers for your programs, indicate many syntax errors, color code commands, variables, etc. and support debugging. Most programmers these days use one or more IDEs.

Supplement Part II in the companion site discusses and provides directions for several of these IDEs; you are welcome to try as many as you want. If you do not care to investigate which one, I suggest you use Eclipse, an open source (free) IDE.  Two widely used IDEs are NetBeans (briefly described in Section 1.11 starting on p23) and Eclipse (Section 1.12 p25).  Your instructor will be using Eclipse to test all your programs.

In addition, IDEs usually have debugging tools. If you learn to use the debugging tools you may never again have to use neither Scanner nor println() statement at all.

Take your time with all this; what you learn here will serve you well during the rest of this course and the rest of your career as a programmer.

Exercises are somewhat targeted to your edition and interest; chose the set you want to pursue:

Assignment 1

12th Edition

11th Edition

CS

1.1, 1.5, 2.15, 2.19

1.1, 1.5, 2.15, 2.19

MIS

1.1, 1,5, 2.15, 2.20

1.1, 1.5, 2.15, 2.20

Students pursuing the MIS track should also note Exercise 2.19 for the area of a triangle.  This will be required for some further exercises.
